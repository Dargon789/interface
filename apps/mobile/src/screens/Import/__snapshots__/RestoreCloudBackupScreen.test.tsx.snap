// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RestoreCloudBackupScreen renders correctly 1`] = `
<View
  style={
    {
      "backgroundColor": {
        "dynamic": {
          "dark": "#131313",
          "light": "#FFFFFF",
        },
      },
      "flex": 1,
      "flexDirection": "column",
      "paddingLeft": 0,
      "paddingRight": 0,
      "paddingTop": 200,
    }
  }
>
  <View
    behavior="padding"
    enabled={true}
    style={
      [
        {
          "flex": 1,
          "justifyContent": "flex-end",
        },
        {
          "marginBottom": 0,
        },
      ]
    }
  >
    <View
      collapsable={false}
      entering={[Function]}
      exiting={[Function]}
      style={
        {
          "flexDirection": "column",
          "flexGrow": 1,
          "gap": 16,
          "paddingBottom": 16,
          "paddingLeft": 16,
          "paddingRight": 16,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "column",
            "gap": 8,
            "justifyContent": "center",
            "marginBottom": 12,
            "marginLeft": 12,
            "marginRight": 12,
            "marginTop": 12,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "column",
              "justifyContent": "center",
              "marginBottom": 4,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "backgroundColor": {
                  "dynamic": {
                    "dark": "rgba(255,255,255,0.12)",
                    "light": "rgba(19, 19, 19, 0.08)",
                  },
                },
                "borderBottomLeftRadius": 8,
                "borderBottomRightRadius": 8,
                "borderTopLeftRadius": 8,
                "borderTopRightRadius": 8,
                "flexDirection": "column",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={18}
              bbWidth={18}
              fill="none"
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              strokeWidth={8}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "color": "#131313",
                    "height": 18,
                    "width": 18,
                  },
                  {
                    "flex": 0,
                    "height": 18,
                    "width": 18,
                  },
                ]
              }
              vbHeight={18}
              vbWidth={19}
            >
              <RNSVGGroup
                color="#131313"
                fill={null}
                propList={
                  [
                    "fill",
                    "strokeWidth",
                  ]
                }
                strokeWidth={8}
              >
                <RNSVGPath
                  d="M4.48401 8.03174C3.99576 7.57049 4.32196 6.74925 4.99396 6.75H6.81055V3C6.81055 2.586 7.14655 2.25 7.56055 2.25H12.0605C12.4745 2.25 12.8105 2.586 12.8105 3V6.75H14.756C15.428 6.75 15.7542 7.57049 15.266 8.03174L10.5598 12.4778C10.1758 12.8408 9.57494 12.8408 9.19019 12.4778L4.48401 8.03174ZM15.125 15.1875H4.625C4.3145 15.1875 4.0625 15.4395 4.0625 15.75C4.0625 16.0605 4.3145 16.3125 4.625 16.3125H15.125C15.4355 16.3125 15.6875 16.0605 15.6875 15.75C15.6875 15.4395 15.4355 15.1875 15.125 15.1875Z"
                  fill={
                    {
                      "type": 2,
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <Text
          allowFontScaling={false}
          maxFontSizeMultiplier={1.4}
          style={
            {
              "color": {
                "dynamic": {
                  "dark": "#FFFFFF",
                  "light": "#131313",
                },
              },
              "fontFamily": "Basel Grotesk",
              "fontSize": 19,
              "fontWeight": "400",
              "lineHeight": 24,
              "paddingTop": 0,
              "textAlign": "center",
            }
          }
          suppressHighlighting={true}
        >
          Select a backup to restore
        </Text>
        <Text
          allowFontScaling={true}
          maxFontSizeMultiplier={1.4}
          style={
            {
              "color": {
                "dynamic": {
                  "dark": "rgba(255, 255, 255, 0.65)",
                  "light": "rgba(19, 19, 19, 0.63)",
                },
              },
              "fontFamily": "Basel Grotesk",
              "fontSize": 17,
              "fontWeight": "400",
              "lineHeight": 20,
              "textAlign": "center",
            }
          }
          suppressHighlighting={true}
        >
          There are multiple recovery phrases backed up to your iCloud.
        </Text>
      </View>
      <View
        style={
          {
            "flex": 1,
            "flexDirection": "column",
            "flexGrow": 1,
            "justifyContent": "space-between",
          }
        }
      >
        <RCTScrollView
          collapsable={false}
          handlerTag={1}
          handlerType="NativeViewGestureHandler"
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
        >
          <View>
            <View
              style={
                {
                  "flexDirection": "column",
                  "gap": 8,
                }
              }
            >
              <View
                collapsable={false}
                focusVisibleStyle={{}}
                forwardedRef={[Function]}
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                role="button"
                style={
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgba(19, 19, 19, 0.08)",
                    "borderBottomLeftRadius": 20,
                    "borderBottomRightRadius": 20,
                    "borderBottomWidth": 1,
                    "borderLeftColor": "rgba(19, 19, 19, 0.08)",
                    "borderLeftWidth": 1,
                    "borderRightColor": "rgba(19, 19, 19, 0.08)",
                    "borderRightWidth": 1,
                    "borderStyle": "solid",
                    "borderTopColor": "rgba(19, 19, 19, 0.08)",
                    "borderTopLeftRadius": 20,
                    "borderTopRightRadius": 20,
                    "borderTopWidth": 1,
                    "flexDirection": "column",
                    "opacity": 1,
                    "paddingBottom": 16,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 16,
                    "shadowColor": "rgb(19,19,19)",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0.0784313725490196,
                    "shadowRadius": 4,
                    "transform": [
                      {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  onBlur={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "gap": 12,
                    }
                  }
                >
                  <View
                    onBlur={[Function]}
                    onFocus={[Function]}
                    style={
                      {
                        "backgroundColor": {
                          "dynamic": {
                            "dark": "transparent",
                            "light": "transparent",
                          },
                        },
                        "borderBottomColor": {
                          "dynamic": {
                            "dark": "transparent",
                            "light": "transparent",
                          },
                        },
                        "borderBottomLeftRadius": 999999,
                        "borderBottomRightRadius": 999999,
                        "borderBottomWidth": 0,
                        "borderLeftColor": {
                          "dynamic": {
                            "dark": "transparent",
                            "light": "transparent",
                          },
                        },
                        "borderLeftWidth": 0,
                        "borderRightColor": {
                          "dynamic": {
                            "dark": "transparent",
                            "light": "transparent",
                          },
                        },
                        "borderRightWidth": 0,
                        "borderStyle": "solid",
                        "borderTopColor": {
                          "dynamic": {
                            "dark": "transparent",
                            "light": "transparent",
                          },
                        },
                        "borderTopLeftRadius": 999999,
                        "borderTopRightRadius": 999999,
                        "borderTopWidth": 0,
                        "flexDirection": "column",
                        "height": 36,
                        "position": "relative",
                        "width": 36,
                      }
                    }
                    testID="account-icon"
                  >
                    <View
                      collapsable={false}
                      forwardedRef={[Function]}
                      jestAnimatedStyle={
                        {
                          "value": {
                            "opacity": 0,
                          },
                        }
                      }
                      onBlur={[Function]}
                      onFocus={[Function]}
                      style={
                        {
                          "flexDirection": "column",
                          "opacity": 0,
                        }
                      }
                    />
                  </View>
                  <View
                    onBlur={[Function]}
                    onFocus={[Function]}
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column",
                      }
                    }
                  >
                    <View
                      onBlur={[Function]}
                      onFocus={[Function]}
                      style={
                        {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <Text
                        adjustsFontSizeToFit={true}
                        allowFontScaling={true}
                        maxFontSizeMultiplier={1.4}
                        onBlur={[Function]}
                        onFocus={[Function]}
                        style={
                          {
                            "color": {
                              "dynamic": {
                                "dark": "#FFFFFF",
                                "light": "#131313",
                              },
                            },
                            "fontFamily": "Basel Grotesk",
                            "fontSize": 19,
                            "fontWeight": "400",
                            "lineHeight": 24,
                          }
                        }
                        suppressHighlighting={true}
                      />
                    </View>
                    <Text
                      adjustsFontSizeToFit={true}
                      allowFontScaling={true}
                      maxFontSizeMultiplier={1.4}
                      onBlur={[Function]}
                      onFocus={[Function]}
                      style={
                        {
                          "color": {
                            "dynamic": {
                              "dark": "rgba(255, 255, 255, 0.65)",
                              "light": "rgba(19, 19, 19, 0.63)",
                            },
                          },
                          "fontFamily": "Basel Grotesk",
                          "fontSize": 15,
                          "fontWeight": "400",
                          "lineHeight": 19.5,
                        }
                      }
                      suppressHighlighting={true}
                    >
                      Nov 8, 55840 5:30 PM
                    </Text>
                  </View>
                  <View
                    onBlur={[Function]}
                    onFocus={[Function]}
                    style={
                      {
                        "flexDirection": "column",
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      forwardedRef={[Function]}
                      jestAnimatedStyle={
                        {
                          "value": {
                            "borderBottomLeftRadius": 999999,
                            "borderBottomRightRadius": 999999,
                            "borderTopLeftRadius": 999999,
                            "borderTopRightRadius": 999999,
                            "transform": [
                              {
                                "rotate": "180deg",
                              },
                            ],
                          },
                        }
                      }
                      onBlur={[Function]}
                      onFocus={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "borderBottomLeftRadius": 999999,
                          "borderBottomRightRadius": 999999,
                          "borderTopLeftRadius": 999999,
                          "borderTopRightRadius": 999999,
                          "flexDirection": "column",
                          "justifyContent": "center",
                          "transform": [
                            {
                              "rotate": "180deg",
                            },
                          ],
                        }
                      }
                    >
                      <RNSVGSvgView
                        align="xMidYMid"
                        bbHeight={20}
                        bbWidth={20}
                        fill="none"
                        focusable={false}
                        meetOrSlice={0}
                        minX={0}
                        minY={0}
                        strokeWidth={8}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            {
                              "color": "rgba(19, 19, 19, 0.63)",
                              "height": 20,
                              "width": 20,
                            },
                            {
                              "flex": 0,
                              "height": 20,
                              "width": 20,
                            },
                          ]
                        }
                        vbHeight={24}
                        vbWidth={24}
                      >
                        <RNSVGGroup
                          color="rgba(19, 19, 19, 0.63)"
                          fill={null}
                          propList={
                            [
                              "fill",
                              "strokeWidth",
                            ]
                          }
                          strokeWidth={8}
                        >
                          <RNSVGPath
                            clipRule={0}
                            d="M15.7071 5.29289C16.0976 5.68342 16.0976 6.31658 15.7071 6.70711L10.4142 12L15.7071 17.2929C16.0976 17.6834 16.0976 18.3166 15.7071 18.7071C15.3166 19.0976 14.6834 19.0976 14.2929 18.7071L8.2929 12.7071C7.9024 12.3166 7.9024 11.6834 8.2929 11.2929L14.2929 5.29289C14.6834 4.90237 15.3166 4.90237 15.7071 5.29289Z"
                            fill={
                              {
                                "type": 2,
                              }
                            }
                            fillRule={0}
                            propList={
                              [
                                "fill",
                                "fillRule",
                              ]
                            }
                          />
                        </RNSVGGroup>
                      </RNSVGSvgView>
                    </View>
                  </View>
                </View>
              </View>
              <View
                collapsable={false}
                focusVisibleStyle={{}}
                forwardedRef={[Function]}
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                role="button"
                style={
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderBottomColor": "rgba(19, 19, 19, 0.08)",
                    "borderBottomLeftRadius": 20,
                    "borderBottomRightRadius": 20,
                    "borderBottomWidth": 1,
                    "borderLeftColor": "rgba(19, 19, 19, 0.08)",
                    "borderLeftWidth": 1,
                    "borderRightColor": "rgba(19, 19, 19, 0.08)",
                    "borderRightWidth": 1,
                    "borderStyle": "solid",
                    "borderTopColor": "rgba(19, 19, 19, 0.08)",
                    "borderTopLeftRadius": 20,
                    "borderTopRightRadius": 20,
                    "borderTopWidth": 1,
                    "flexDirection": "column",
                    "opacity": 1,
                    "paddingBottom": 16,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 16,
                    "shadowColor": "rgb(19,19,19)",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0.0784313725490196,
                    "shadowRadius": 4,
                    "transform": [
                      {
                        "scale": 1,
                      },
                    ],
                  }
                }
              >
                <View
                  onBlur={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "gap": 12,
                    }
                  }
                >
                  <View
                    onBlur={[Function]}
                    onFocus={[Function]}
                    style={
                      {
                        "backgroundColor": {
                          "dynamic": {
                            "dark": "transparent",
                            "light": "transparent",
                          },
                        },
                        "borderBottomColor": {
                          "dynamic": {
                            "dark": "transparent",
                            "light": "transparent",
                          },
                        },
                        "borderBottomLeftRadius": 999999,
                        "borderBottomRightRadius": 999999,
                        "borderBottomWidth": 0,
                        "borderLeftColor": {
                          "dynamic": {
                            "dark": "transparent",
                            "light": "transparent",
                          },
                        },
                        "borderLeftWidth": 0,
                        "borderRightColor": {
                          "dynamic": {
                            "dark": "transparent",
                            "light": "transparent",
                          },
                        },
                        "borderRightWidth": 0,
                        "borderStyle": "solid",
                        "borderTopColor": {
                          "dynamic": {
                            "dark": "transparent",
                            "light": "transparent",
                          },
                        },
                        "borderTopLeftRadius": 999999,
                        "borderTopRightRadius": 999999,
                        "borderTopWidth": 0,
                        "flexDirection": "column",
                        "height": 36,
                        "position": "relative",
                        "width": 36,
                      }
                    }
                    testID="account-icon"
                  >
                    <View
                      collapsable={false}
                      forwardedRef={[Function]}
                      jestAnimatedStyle={
                        {
                          "value": {
                            "opacity": 0,
                          },
                        }
                      }
                      onBlur={[Function]}
                      onFocus={[Function]}
                      style={
                        {
                          "flexDirection": "column",
                          "opacity": 0,
                        }
                      }
                    />
                  </View>
                  <View
                    onBlur={[Function]}
                    onFocus={[Function]}
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column",
                      }
                    }
                  >
                    <View
                      onBlur={[Function]}
                      onFocus={[Function]}
                      style={
                        {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <Text
                        adjustsFontSizeToFit={true}
                        allowFontScaling={true}
                        maxFontSizeMultiplier={1.4}
                        onBlur={[Function]}
                        onFocus={[Function]}
                        style={
                          {
                            "color": {
                              "dynamic": {
                                "dark": "#FFFFFF",
                                "light": "#131313",
                              },
                            },
                            "fontFamily": "Basel Grotesk",
                            "fontSize": 19,
                            "fontWeight": "400",
                            "lineHeight": 24,
                          }
                        }
                        suppressHighlighting={true}
                      />
                    </View>
                    <Text
                      adjustsFontSizeToFit={true}
                      allowFontScaling={true}
                      maxFontSizeMultiplier={1.4}
                      onBlur={[Function]}
                      onFocus={[Function]}
                      style={
                        {
                          "color": {
                            "dynamic": {
                              "dark": "rgba(255, 255, 255, 0.65)",
                              "light": "rgba(19, 19, 19, 0.63)",
                            },
                          },
                          "fontFamily": "Basel Grotesk",
                          "fontSize": 15,
                          "fontWeight": "400",
                          "lineHeight": 19.5,
                        }
                      }
                      suppressHighlighting={true}
                    >
                      Nov 8, 55840 5:13 PM
                    </Text>
                  </View>
                  <View
                    onBlur={[Function]}
                    onFocus={[Function]}
                    style={
                      {
                        "flexDirection": "column",
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      forwardedRef={[Function]}
                      jestAnimatedStyle={
                        {
                          "value": {
                            "borderBottomLeftRadius": 999999,
                            "borderBottomRightRadius": 999999,
                            "borderTopLeftRadius": 999999,
                            "borderTopRightRadius": 999999,
                            "transform": [
                              {
                                "rotate": "180deg",
                              },
                            ],
                          },
                        }
                      }
                      onBlur={[Function]}
                      onFocus={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "borderBottomLeftRadius": 999999,
                          "borderBottomRightRadius": 999999,
                          "borderTopLeftRadius": 999999,
                          "borderTopRightRadius": 999999,
                          "flexDirection": "column",
                          "justifyContent": "center",
                          "transform": [
                            {
                              "rotate": "180deg",
                            },
                          ],
                        }
                      }
                    >
                      <RNSVGSvgView
                        align="xMidYMid"
                        bbHeight={20}
                        bbWidth={20}
                        fill="none"
                        focusable={false}
                        meetOrSlice={0}
                        minX={0}
                        minY={0}
                        strokeWidth={8}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            {
                              "color": "rgba(19, 19, 19, 0.63)",
                              "height": 20,
                              "width": 20,
                            },
                            {
                              "flex": 0,
                              "height": 20,
                              "width": 20,
                            },
                          ]
                        }
                        vbHeight={24}
                        vbWidth={24}
                      >
                        <RNSVGGroup
                          color="rgba(19, 19, 19, 0.63)"
                          fill={null}
                          propList={
                            [
                              "fill",
                              "strokeWidth",
                            ]
                          }
                          strokeWidth={8}
                        >
                          <RNSVGPath
                            clipRule={0}
                            d="M15.7071 5.29289C16.0976 5.68342 16.0976 6.31658 15.7071 6.70711L10.4142 12L15.7071 17.2929C16.0976 17.6834 16.0976 18.3166 15.7071 18.7071C15.3166 19.0976 14.6834 19.0976 14.2929 18.7071L8.2929 12.7071C7.9024 12.3166 7.9024 11.6834 8.2929 11.2929L14.2929 5.29289C14.6834 4.90237 15.3166 4.90237 15.7071 5.29289Z"
                            fill={
                              {
                                "type": 2,
                              }
                            }
                            fillRule={0}
                            propList={
                              [
                                "fill",
                                "fillRule",
                              ]
                            }
                          />
                        </RNSVGGroup>
                      </RNSVGSvgView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </View>
</View>
`;
