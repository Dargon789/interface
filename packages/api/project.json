{
  "name": "@universe/api",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/api/src",
  "projectType": "library",
  "tags": [],
  "targets": {
    "typecheck": {
      "command": "tsc -b",
      "options": {
        "cwd": "{projectRoot}"
      }
    },
    "lint:biome": {
      "command": "biome check --error-on-warnings .",
      "options": {
        "cwd": "{projectRoot}"
      }
    },
    "lint:biome:fix": {
      "command": "biome check . --write --unsafe",
      "options": {
        "cwd": "{projectRoot}"
      }
    },
    "lint:eslint": {
      "command": "eslint . --ext ts,tsx --max-warnings=0",
      "options": {
        "cwd": "{projectRoot}"
      }
    },
    "lint:eslint:fix": {
      "command": "eslint . --ext ts,tsx --fix",
      "options": {
        "cwd": "{projectRoot}"
      }
    },
    "lint": {
      "executor": "nx:noop",
      "options": {
        "cwd": "{projectRoot}"
      },
      "dependsOn": ["lint:biome", "lint:eslint"]
    },
    "lint:fix": {
      "executor": "nx:noop",
      "options": {
        "cwd": "{projectRoot}"
      },
      "dependsOn": ["lint:biome:fix", "lint:eslint:fix"]
    },
    "format": {
      "command": "biome check . --linter-enabled=false",
      "options": {
        "cwd": "{projectRoot}"
      }
    },
    "prepare": {
      "command": "echo 'preparing @universe/api'",
      "options": {
        "cwd": "{projectRoot}"
      },
      "dependsOn": ["tradingapi:generate", "graphql:generate"],
      "cache": true
    },
    "check:deps:usage": {
      "command": "depcheck",
      "options": {
        "cwd": "{projectRoot}"
      },
      "inputs": ["{projectRoot}/package.json", "{projectRoot}/.depcheckrc"],
      "cache": true
    },
    "test": {
      "command": "vitest",
      "options": {
        "cwd": "{projectRoot}"
      }
    },
    "test:coverage": {
      "command": "vitest --coverage",
      "options": {
        "cwd": "{projectRoot}"
      }
    },
    "tradingapi:schema": {
      "command": "curl https://api.uniswap.org/v2/trade/api.json -o ./src/clients/trading/api.json",
      "options": {
        "cwd": "{projectRoot}"
      }
    },
    "tradingapi:generate:openapi": {
      "command": "openapi --input ./src/clients/trading/api.json --output ./src/clients/trading/__generated__ --useOptions --exportServices true --exportModels true",
      "options": {
        "cwd": "{projectRoot}"
      },
      "cache": true,
      "inputs": ["{projectRoot}/src/clients/trading/api.json"],
      "outputs": ["{projectRoot}/src/clients/trading/__generated__"]
    },
    "tradingapi:generate": {
      "command": "node --no-warnings=ExperimentalWarning --loader ts-node/esm ./scripts/modifyTradingApiTypes.mts",
      "options": {
        "cwd": "{projectRoot}"
      },
      "cache": true,
      "inputs": [
        "{projectRoot}/src/clients/trading/__generated__/models",
        "{projectRoot}/scripts/modifyTradingApiTypes.mts",
        "{projectRoot}/src/clients/trading/types.ts",
        {
          "runtime": "node -v"
        }
      ],
      "outputs": ["{projectRoot}/src/clients/trading/__generated__/models"],
      "dependsOn": ["tradingapi:generate:openapi"]
    },
    "graphql:schema": {
      "command": "get-graphql-schema https://api.uniswap.org/v1/graphql -h Origin=https://app.uniswap.org > ./src/clients/graphql/schema.graphql",
      "options": {
        "cwd": "{projectRoot}"
      }
    },
    "graphql:generate": {
      "command": "graphql-codegen --config ./src/clients/graphql/codegen.config.ts",
      "options": {
        "cwd": "{projectRoot}"
      },
      "cache": true,
      "inputs": [
        "{projectRoot}/src/clients/graphql/codegen.config.ts",
        "{projectRoot}/src/**/*.graphql",
        "{projectRoot}/src/**/*.gql"
      ],
      "outputs": ["{projectRoot}/src/clients/graphql/__generated__"]
    }
  }
}
