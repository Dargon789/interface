{
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "extends": "nx/presets/npm.json",
  "defaultBase": "main",
  "targetDefaults": {
    "prepare": {
      "inputs": [
        "dependencies"
      ],
      "cache": true
    },
    "build": {
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "dependencies",
        "sourceFiles",
        "tsConfig"
      ],
      "outputs": [
        "{projectRoot}/dist",
        "{projectRoot}/build",
        "{projectRoot}/.next",
        "{projectRoot}/types"
      ],
      "cache": true
    },
    "build:production": {
      "dependsOn": [
        "prepare",
        "build"
      ],
      "inputs": [
        "dependencies",
        "default"
      ],
      "outputs": [
        "{projectRoot}/build"
      ],
      "cache": true
    },
    "typecheck": {
      "dependsOn": [
        "prepare",
        "^typecheck",
        "^build"
      ],
      "inputs": [
        "sourceFiles"
      ],
      "outputs": [],
      "cache": true
    },
    "lint": {
      "dependsOn": [
        "typecheck"
      ],
      "inputs": [
        "sourceFiles"
      ],
      "cache": true
    },
    "lint:fix": {
      "dependsOn": [
        "typecheck"
      ],
      "cache": false
    },
    "test": {
      "dependsOn": [
        "^prepare"
      ],
      "inputs": [
        "sourceFiles",
        "{projectRoot}/**/*.test.ts",
        "{projectRoot}/**/*.test.tsx",
        "{projectRoot}/**/*.spec.ts",
        "{projectRoot}/**/*.spec.tsx"
      ],
      "cache": true
    },
    "test:set1": {
      "dependsOn": [
        "^prepare"
      ],
      "inputs": [
        "sourceFiles",
        "{projectRoot}/**/*.test.*",
        "{projectRoot}/**/*.spec.*"
      ],
      "cache": true
    },
    "test:set2": {
      "dependsOn": [
        "^prepare"
      ],
      "inputs": [
        "sourceFiles",
        "{projectRoot}/**/*.test.*",
        "{projectRoot}/**/*.spec.*"
      ],
      "cache": true
    },
    "test:set3": {
      "dependsOn": [
        "^prepare"
      ],
      "inputs": [
        "sourceFiles",
        "{projectRoot}/**/*.test.*",
        "{projectRoot}/**/*.spec.*"
      ],
      "cache": true
    },
    "test:set4": {
      "dependsOn": [
        "^prepare"
      ],
      "inputs": [
        "sourceFiles",
        "{projectRoot}/**/*.test.*",
        "{projectRoot}/**/*.spec.*"
      ],
      "cache": true
    },
    "format": {
      "inputs": [
        "sourceFiles"
      ],
      "cache": true
    },
    "start": {
      "dependsOn": [
        "prepare"
      ],
      "cache": false
    },
    "snapshots": {
      "dependsOn": [
        "prepare",
        "typecheck",
        "lint"
      ],
      "cache": true
    },
    "check:circular": {
      "cache": true
    },
    "check:deps:usage": {
      "cache": true
    },
    "storybook:test:standalone": {
      "dependsOn": [
        "^build"
      ],
      "cache": false
    },
    "storybook:build": {
      "dependsOn": [
        "^build"
      ],
      "cache": false
    },
    "graphql:schema": {
      "inputs": [
        "{workspaceRoot}/.env.production",
        "{projectRoot}/graphql.*.ts"
      ],
      "outputs": [
        "{projectRoot}/schema.graphql"
      ],
      "cache": true
    },
    "graphql:generate": {
      "inputs": [
        "{projectRoot}/codegen.ts",
        "{projectRoot}/src/**/schema.graphql",
        "{projectRoot}/src/**/queries.graphql",
        "{projectRoot}/src/**/fragments.ts",
        "{projectRoot}/src/**/queries.ts",
        "{projectRoot}/src/graphql/**",
        "{projectRoot}/src/data/**/*.graphql"
      ],
      "outputs": [
        "{projectRoot}/src/**/types-and-hooks.ts",
        "{projectRoot}/src/data/graphql/**/__generated__/**",
        "{projectRoot}/src/data/tradingApi/__generated__/**",
        "{projectRoot}/data/__generated__/**",
        "{projectRoot}/graphql/__generated__/**"
      ],
      "cache": true
    },
    "vite:build:production": {
      "dependsOn": [
        "prepare"
      ],
      "inputs": [
        "dependencies",
        "sourceFiles"
      ],
      "outputs": [
        "{projectRoot}/dist"
      ],
      "cache": true
    }
  },
  "projects": {
    "@uniswap/interface": {
      "targets": {
        "prepare": {
          "dependsOn": [
            "ajv",
            "graphql:generate",
            "^prepare"
          ],
          "inputs": [
            "package.json"
          ]
        },
        "ajv": {
          "command": "node scripts/compile-ajv-validators.js",
          "inputs": [
            "scripts/compile-ajv-validators.js",
            "package.json"
          ],
          "outputs": [
            "src/utils/__generated__/**"
          ],
          "cache": true
        }
      }
    },
    "uniswap": {
      "targets": {
        "prepare": {
          "dependsOn": [
            "contracts",
            "graphql:generate",
            "tradingapi:generate",
            "^prepare"
          ],
          "inputs": [
            "package.json"
          ]
        },
        "contracts": {
          "inputs": [
            "package.json"
          ],
          "outputs": [
            "src/abis/**"
          ],
          "cache": true
        },
        "i18n:generate": {
          "inputs": [
            "src/locales.ts",
            "src/i18n/locales/source/**"
          ],
          "outputs": [
            "src/i18n/locales/@types/**"
          ],
          "cache": true
        },
        "tradingapi:generate:openapi": {
          "inputs": [
            "src/data/tradingApi/api.json"
          ],
          "outputs": [
            "src/data/tradingApi/__generated__/**"
          ],
          "cache": true
        },
        "tradingapi:add-local-types": {
          "dependsOn": [
            "tradingapi:generate:openapi"
          ],
          "inputs": [
            "src/data/tradingApi/modifyTradingApiTypes.mts",
            "src/data/tradingApi/__generated__/models/*.ts"
          ],
          "outputs": [
            "src/data/tradingApi/__generated__/models/*.ts"
          ],
          "cache": true
        },
        "tradingapi:generate": {
          "dependsOn": [
            "tradingapi:add-local-types"
          ],
          "cache": true
        }
      }
    }
  },
  "namedInputs": {
    "default": [
      "production"
    ],
    "production": [
      "{projectRoot}/**/*",
      "!{projectRoot}/**/*.spec.tsx",
      "!{projectRoot}/**/*.spec.ts",
      "!{projectRoot}/**/*.test.tsx",
      "!{projectRoot}/**/*.test.ts",
      "!{projectRoot}/jest.config.[jt]s",
      "!{projectRoot}/tsconfig.spec.json",
      "!{projectRoot}/**/*.stories.tsx",
      "!{projectRoot}/**/*.stories.ts"
    ],
    "sharedGlobals": [],
    "sourceFiles": [
      "{projectRoot}/**/*.ts",
      "{projectRoot}/**/*.tsx",
      "{projectRoot}/**/*.js",
      "{projectRoot}/**/*.jsx"
    ],
    "dependencies": [
      "{workspaceRoot}/bun.lock",
      "{workspaceRoot}/package.json",
      "{projectRoot}/package.json"
    ],
    "tsConfig": [
      "{projectRoot}/tsconfig*.json"
    ]
  },
  "workspaceLayout": {
    "appsDir": "apps",
    "libsDir": "packages"
  },
  "parallel": 3,
  "defaultProject": "@uniswap/interface",
  "generators": {
    "@nx/js:library": {
      "buildable": false
    }
  },
  "cacheDirectory": ".nx/cache"
}
