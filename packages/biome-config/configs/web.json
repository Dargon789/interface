{
  "files": {
    "experimentalScannerIgnores": [
      "playwright/**",
      "cypress/**",
      "public/**",
      "functions/**",
      "vite/**",
      "scripts/**",
      "twist-configs/**",
      "test-results/**",
      "*.native.*",
      "*.ios.*",
      "*.android.*",
      "*.mts"
    ]
  },
  "formatter": {
    "includes": [
      "**",
      "!playwright",
      "!cypress",
      "!public",
      "!functions",
      "!scripts",
      "!twist-configs",
      "!test-results"
    ]
  },
  "linter": {
    "includes": ["src/**", "!**/*.config.*", "!**/*.d.ts"],
    "rules": {
      "suspicious": {
        "noExplicitAny": "off",
        "noBitwiseOperators": "off"
      },
      "style": {
        "noNonNullAssertion": "off",
        "noRestrictedImports": {
          "level": "error",
          "options": {
            "paths": {
              "src/nft/components/icons": {
                "message": "Please import icons from nft/components/iconExports instead of directly from icons.tsx"
              },
              "nft/components/icons": {
                "message": "Please import icons from nft/components/iconExports instead of directly from icons.tsx"
              },
              "@playwright/test": {
                "message": "Import test and expect from playwright/fixtures instead."
              },
              "styled-components": {
                "message": "Styled components is deprecated, please use Flex or styled from \"ui/src\" instead."
              },
              "ethers": {
                "message": "Please import from '@ethersproject/module' directly to support tree-shaking."
              },
              "ui/src/components/icons": {
                "message": "Please import icons directly from their respective files, e.g. `ui/src/components/icons/SpecificIcon`. This is to avoid importing the entire icons folder when only some icons are needed, which increases bundle size"
              },
              "utilities/src/platform": {
                "importNames": ["isIOS", "isAndroid"],
                "message": "Importing isIOS and isAndroid from platform is not allowed. Use isWebIOS and isWebAndroid instead."
              },
              "ui/src/components/modal/AdaptiveWebModal": {
                "message": "Please import Modal from `uniswap/src/components/modals/Modal` instead. Modal uses AdaptiveWebModal under the hood but has extra logic for handling animation, mounting, and dismounting."
              }
            }
          }
        }
      }
    }
  },
  "javascript": {
    "jsxRuntime": "reactClassic"
  },
  "overrides": [
    {
      "includes": ["**/*.e2e.test.ts", "!**/*.anvil.e2e.test.ts"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "patterns": [
                  {
                    "group": ["**/playwright/anvil/**", "**/playwright/fixtures/anvil"],
                    "message": "Anvil imports must only be used in *.anvil.e2e.test.ts files."
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": ["!src/**/*.test.ts", "!src/**/*.test.tsx"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "paths": {
                  "src/test-utils": {
                    "message": "test-utils should not be imported in non-test files"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "includes": ["src/playwright/**"],
      "linter": {
        "rules": {
          "suspicious": {
            "noConsole": "off"
          }
        }
      }
    }
  ]
}
